((3) 0 () 6 ((p+ #"/home/tim/Development/HTML/grazhero.github.io/_src/posts/2020-05-23-let-s-try-doing-a-blog.md" . unix) (p+ #"/home/tim/Development/HTML/grazhero.github.io/_src/posts/2020-05-23-the-necessary-evil-of-disqus.md" . unix) (p+ #"/home/tim/Development/HTML/grazhero.github.io/_src/posts/2020-05-23-color-scheme-frustration.md" . unix) (p+ #"/home/tim/Development/HTML/grazhero.github.io/_src/posts/2020-05-23-why-is-it-legal-to-disguise-an-ad-as-an-impartial-review.md" . unix) (p+ #"/home/tim/Development/HTML/grazhero.github.io/_src/posts/2020-07-27-why-i-enjoy-the-yellow-site.md" . unix) (p+ #"/home/tim/Development/HTML/grazhero.github.io/_src/posts/2020-06-21-bootable-incremental-btrfs-backup.md" . unix)) () (h ! (equal) ((? . 0) f post (u . "Let's Try Doing a Blog") (? . 0) 1590274835 (p+ #"/home/tim/Development/HTML/grazhero.github.io/blog/2020/05/23/let-s-try-doing-a-blog.html" . unix) (u . "/blog/2020/05/23/let-s-try-doing-a-blog.html") (u . "2020-05-23T13:19:15") #f (? . 1) (c (u . "meta") c (u . "webdev")) (u . "\n<p>I&rsquo;ve been inspired to start my own blog. I don&rsquo;t have a specific theme in mind, rather I&rsquo;ll just be posting about anything I feel like. Given the nature of my interests, I suspect that computer related topics will be the most prominent.</p>") #t (u . "\n<p>I&rsquo;ve been inspired to start my own blog. I don&rsquo;t have a specific theme in mind, rather I&rsquo;ll just be posting about anything I feel like. Given the nature of my interests, I suspect that computer related topics will be the most prominent.</p>\n<!-- more-->\n\n<p>On the technical side, I&rsquo;ve decided to try using the <a href=\"https://github.com/greghendershott/frog\">Frog</a> static site generator for this blog. I don&rsquo;t yet know if I&rsquo;ll stick with it, but I like its relative simplicity.</p>")) ((? . 1) f post (u . "The Necessary Evil of Disqus") (? . 1) 1590274764 (p+ #"/home/tim/Development/HTML/grazhero.github.io/blog/2020/05/23/the-necessary-evil-of-disqus.html" . unix) (u . "/blog/2020/05/23/the-necessary-evil-of-disqus.html") (u . "2020-05-23T16:26:44") (? . 0) (? . 2) (c (u . "meta") c (u . "webdev")) (u . "\n<p>In the process of setting this blog up, I&rsquo;ve decided that reader interaction is something I&rsquo;d like to have.</p>") #t (u . "\n<p>In the process of setting this blog up, I&rsquo;ve decided that reader interaction is something I&rsquo;d like to have.</p>\n<!-- more-->\n\n<p>The easy route would be to just leave my email contact information for anyone who has any comments. This option has a few drawbacks though:</p>\n\n<ul>\n <li>I feel like the number of people potentially willing to go to the trouble to send me an email isn&rsquo;t as large as that of people willing to leave their thoughts in an embedded comment section.</li>\n <li>I feel there can be a lot of value in having an open forum for discussion. Having comments be relegated to a two-way email thread means missing out on some potentially interesting points of view.</li></ul>\n\n<p>So I began to think of how best to integrate a comment section into my blog, which is built with a static site generator. For the time being, I&rsquo;ve settled on the immensely popular Disqus. The ease of setting it up was intriguing. But it&rsquo;s not without some glaring drawbacks of its own, which make me hesitant to consider this a permanent solution:</p>\n\n<ul>\n <li>Loading external Javascript makes me very uncomfortable.</li>\n <li><a href=\"https://help.disqus.com/en/articles/1717103-disqus-privacy-policy\">Disqus&rsquo; Privacy Policy</a> is the stuff of nightmares</li></ul>\n\n<p>So obviously it&rsquo;s far from ideal. I encourage any readers who are uncomfortable with Disqus to block their scripts.</p>\n\n<p>I want comments though, so screw it.</p>")) ((? . 2) f post (u . "Color Scheme Frustration") (? . 2) 1590279861 (p+ #"/home/tim/Development/HTML/grazhero.github.io/blog/2020/05/23/color-scheme-frustration.html" . unix) (u . "/blog/2020/05/23/color-scheme-frustration.html") (u . "2020-05-23T18:23:30") (? . 1) (? . 3) (c (u . "software")) (u . "\n<p>If you&rsquo;re anything like me, you probably have a massive problem with getting distracted by the urge to tweak the color scheme of your development environment. Whether it&rsquo;s Emacs or Xfce, feeling unsatisfied with my current color scheme or window manager theme is something which has to potential to massively hinder my productivity for several days. Obviously procrastination is something that most of us are susceptible to, to some degree. However, I find this particular manifestation of it to be frustrating in a unique way.</p>") #t (u . "\n<p>If you&rsquo;re anything like me, you probably have a massive problem with getting distracted by the urge to tweak the color scheme of your development environment. Whether it&rsquo;s Emacs or Xfce, feeling unsatisfied with my current color scheme or window manager theme is something which has to potential to massively hinder my productivity for several days. Obviously procrastination is something that most of us are susceptible to, to some degree. However, I find this particular manifestation of it to be frustrating in a unique way.</p>\n<!-- more-->\n\n<p>Oftentimes the catalyst for these feelings is seeing someone else&rsquo;s colors and deciding that mine are inadequate in some way. Then I try out some different themes that others have made, but none of them are quite perfect. There&rsquo;s always some little thing that bothers the hell out of me.</p>\n\n<p>Another issue that tends to creep up in my mind during this process is that of cohesiveness. I like for my Emacs theme to at least sort of go along well with my GTK theme, window manager theme, and the themes of any other programs which roll their own theming system (i.e. Slack). The result is that I end up wasting even more time, and getting even more sidetracked from whatever it was I was trying to do in the first place.</p>\n\n<p>I like to think of myself as someone who generally values functionality over style, but it seems that in reality my behavior is not always reflective of that kind of mindset.</p>\n\n<p>I&rsquo;ve had people say to me that they actually appreciate the restrictive nature of macOS, because it doesn&rsquo;t allow them to waste their own time with excessive customization. When I was younger, I would have scoffed at this. Now though, I can understand where they&rsquo;re coming from.</p>\n\n<p>Ultimately though, I still prefer having this kind of freedom despite its shortcomings.</p>")) ((? . 3) f post (u . "Why is it Legal to Disguise an Ad as an Impartial Review?") (? . 3) 1590294088 (p+ #"/home/tim/Development/HTML/grazhero.github.io/blog/2020/05/23/why-is-it-legal-to-disguise-an-ad-as-an-impartial-review.html" . unix) (u . "/blog/2020/05/23/why-is-it-legal-to-disguise-an-ad-as-an-impartial-review.html") (u . "2020-05-23T21:00:39") (? . 2) (? . 5) (c (u . "internet") c (u . "society") c (u . "ads")) (u . "\n<p><img src=\"/img/fake-review.png\" alt=\"screenshot of a fake review\" /></p>\n\n<p>Recently I&rsquo;ve been getting <a href=\"https://www.youtube.com/watch?v=o0wr37CZWdc\">this</a> ad on YouTube. What I immediately found funny was the &lsquo;reviewer&rsquo;s&rsquo; completely emotionless delivery. &ldquo;I&rsquo;m excited, let&rsquo;s see what&rsquo;s inside,&rdquo; he says, although excitement is the very last emotion I would guess he&rsquo;s feeling based on his inflection.</p>") #t (u . "\n<p><img src=\"/img/fake-review.png\" alt=\"screenshot of a fake review\" /></p>\n\n<p>Recently I&rsquo;ve been getting <a href=\"https://www.youtube.com/watch?v=o0wr37CZWdc\">this</a> ad on YouTube. What I immediately found funny was the &lsquo;reviewer&rsquo;s&rsquo; completely emotionless delivery. &ldquo;I&rsquo;m excited, let&rsquo;s see what&rsquo;s inside,&rdquo; he says, although excitement is the very last emotion I would guess he&rsquo;s feeling based on his inflection.</p>\n<!-- more-->\n\n<p>It should be fairly obvious to anyone that this is in no way a legitimate review of a product. I&rsquo;m pretty sure it&rsquo;s not even a sponsored review by an established reviewer; nothing in the video or its description gives any indication of <em>who</em> this supposed reviewer even is. It&rsquo;s an advertisement masquerading as a review.</p>\n\n<p>In case you aren&rsquo;t yet convinced of the dishonest nature of this company&rsquo;s advertising, they have several other videos which follow the same format and a very similar script. Some examples <a href=\"https://www.youtube.com/watch?v=dfToHzOmwdI\">here</a> and <a href=\"https://www.youtube.com/watch?v=o0wr37CZWdc\">here</a>.</p>\n\n<p>As I continued getting this ad, a question crept up in my head: why the hell is this even legal? There is no disclaimer as far as I can tell. It seems to me that they want you to believe this is a real review.</p>\n\n<p>Seriously, why do we as a society allow such blatantly deceptive advertising? I just don&rsquo;t see what good it serves. It doesn&rsquo;t look like the product itself is a total scam in this case, so why do they feel the need to lie?</p>")) ((? . 4) f post (u . "Why I Enjoy the Yellow Site") (? . 4) 1595887262 (p+ #"/home/tim/Development/HTML/grazhero.github.io/blog/2020/07/27/why-i-enjoy-the-yellow-site.html" . unix) (u . "/blog/2020/07/27/why-i-enjoy-the-yellow-site.html") (u . "2020-07-27T10:06:29") (? . 5) #f (c (u . "internet") c (u . "discussion") c (u . "society")) (u . "\n<p>I like feeling like I&rsquo;m contributing to the public dialogue in some small way. It brings me a sense of fulfillment. It&rsquo;s important though to not let yourself be consumed by it though. I&rsquo;ve fallen down the rabbit hole before, of getting into heated internet arguments. It&rsquo;s horrible for my mental health.</p>\n\n<p>All that seems pretty stupidly obvious of course. Sometimes it&rsquo;s helpful to remind yourself of basic things though.</p>\n\n<p>I think one reason why I find HN a lot less insufferable than reddit is that you can&rsquo;t see the number of upvotes a comment has. Being able to see the number of upvotes contributes to that fucking awful herd mentality reddit is known for.</p>") #f (u . "\n<p>I like feeling like I&rsquo;m contributing to the public dialogue in some small way. It brings me a sense of fulfillment. It&rsquo;s important though to not let yourself be consumed by it though. I&rsquo;ve fallen down the rabbit hole before, of getting into heated internet arguments. It&rsquo;s horrible for my mental health.</p>\n\n<p>All that seems pretty stupidly obvious of course. Sometimes it&rsquo;s helpful to remind yourself of basic things though.</p>\n\n<p>I think one reason why I find HN a lot less insufferable than reddit is that you can&rsquo;t see the number of upvotes a comment has. Being able to see the number of upvotes contributes to that fucking awful herd mentality reddit is known for.</p>")) ((? . 5) f post (u . "Bootable, Incremental, External BTRFS Backup") (? . 5) 1592733018 (p+ #"/home/tim/Development/HTML/grazhero.github.io/blog/2020/06/21/bootable-incremental-external-btrfs-backup.html" . unix) (u . "/blog/2020/06/21/bootable-incremental-external-btrfs-backup.html") (u . "2020-06-21T03:22:14") (? . 3) (? . 4) (c (u . "software") c (u . "hardware") c (u . "unix")) (u . "\n<p>For a while I&rsquo;ve wanted to have a way for making bootable backups of my BTRFS-on-LVM-on-LUKS system to an external drive. There are several programs which use the snapshot system of BTRFS to streamline the process of making backups, but none of them seemed flexible enough. So I went about putting together a little system that&rsquo;s tailored to my personal setup.</p>") #t (u . "\n<p>For a while I&rsquo;ve wanted to have a way for making bootable backups of my BTRFS-on-LVM-on-LUKS system to an external drive. There are several programs which use the snapshot system of BTRFS to streamline the process of making backups, but none of them seemed flexible enough. So I went about putting together a little system that&rsquo;s tailored to my personal setup.</p>\n<!-- more-->\n\n<h1 id=\"setting-things-up\">Setting Things Up</h1>\n\n<p>I started by partitioning the external drive identically to my main one. Once I did that, I moved on to bootstrapping the incremental  backup system.</p>\n\n<p>Most of what I did is based on <a href=\"https://btrfs.wiki.kernel.org/index.php/Incremental_Backup#Doing_it_by_hand.2C_step_by_step\">this</a> article, which was very useful.</p>\n\n<p>The bootstrap process in that article left me with a backup subvolume which was readonly. Readonly makes sense for backups, but I really would like the option to boot right in to my backup without any hassle, in case my SSD were to completely fail at an inopportune moment. So I took a read/write snapshot of the backup subvolume, which I&rsquo;ll make bootable later.</p>\n\n<pre><code>$ sudo btrfs sub snap /mnt/backuproot/backup /mnt/backuproot/bootable</code></pre>\n\n<h1 id=\"making-it-bootable\">Making it Bootable</h1>\n\n<p>Obviously several files make reference to the UUIDs of the partitions on my main drive. In order to make the bootable bootable subvolume work, I need to edit a couple files and copy them over.</p>\n\n<p>I started by making a copy of <code>/etc/fstab</code> and replacing any UUID with the corresponding one for the external drive. Then I copied this version over to the bootable subvolume, replacing the version of the file it got from the snapshot earlier. Note that I have to copy it over every time I make a backup, as it will be overwritten by the snapshot.</p>\n\n<p>Then I made a copy of <code>/etc/default/grub</code>, replaced any UUID, and copied it over. Like with <code>fstab</code>, I must repeat this every time I make a backup.</p>\n\n<p>Now that <code>etc/default/grub</code> is in place, it&rsquo;s time to actually install grub to the EFI System Partition of the external drive (simply copying over the grub installation from the main drive won&rsquo;t work).</p>\n\n<p>Before starting that though, I give the bootable subvol its own mount point. For some reason I ran into issues getting GRUB to install in the chroot later unless I did this.</p>\n\n<pre><code>$ sudo mount -t btrfs -o subvol=/bootable /dev/mapper/archimedes--backup-root /mnt/bootable</code></pre>\n\n<p>Now I mount the virtual filesystems.</p>\n\n<pre><code>$ for i in /dev /proc /sys /run; do; sudo mount -o bind $i /mnt/bootable$i; done</code></pre>\n\n<p>If you want a UEFI boot entry for the backup drive, you&rsquo;ll also need efivars to be mounted while you install GRUB.</p>\n\n<p>Mount the external drive&rsquo;s ESP inside the bootable subvol.</p>\n\n<pre><code>$ sudo mount /dev/sdb1 /mnt/bootable/efi</code></pre>\n\n<p>And then chroot into it.</p>\n\n<pre><code>$ sudo chroot /mnt/bootable</code></pre>\n\n<p>From here, there are several things I need to do. First install GRUB. Because my ESP isn&rsquo;t included in the BTRFS snapshots, I only need to perform this step once.</p>\n\n<pre><code># grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUBBACKUP</code></pre>\n\n<p>Then generate the config file. This step must be repeated every time (although that may not be the case on systems where /boot is a separate, non-BTRFS partition, come to think of it).</p>\n\n<pre><code># grub-mkconfig -o /boot/grub/grub.cfg</code></pre>\n\n<p>And lastly I needed to regenerate the initramfs. Linux wasn&rsquo;t able to find any disks unless I did this. This step must be repeated every time as well.</p>\n\n<pre><code># mkinitcpio -P</code></pre>\n\n<p>And there we go. The drive should be bootable now.</p>\n\n<h1 id=\"keeping-it-bootable\">Keeping it Bootable</h1>\n\n<p>You&rsquo;ll want to keep at least two subvolumes on the backup drive: the readonly one which directly mirrors your main filesystem, and the read/write one which has been modified to be bootable. Incremental backups can be done with the method described in the <a href=\"https://btrfs.wiki.kernel.org/index.php/Incremental_Backup#Doing_it_by_hand.2C_step_by_step\">aforementioned article</a>. I decided on just deleting the bootable subvol after the incremental backup has happened, and then creating it again and repeating the necessary steps. This is fine because I only ever intend to boot into this in case of emergency.</p>\n\n<h1 id=\"something-annoying-to-be-aware-of\">Something Annoying to Be Aware of</h1>\n\n<p>If you have SYSTEMD, It&rsquo;s important to realize that it has no qualms about making its own BTRFS subvolumes without telling you. Notably, <code>/var/lib/machines</code> and <code>/var/lib/portables</code> are subvolumes that SyStEmD creates. Although subvolumes in question didn&rsquo;t initially get carried over with the incremental backup, they were created automatically upon booting into the backup drive, and they weren&rsquo;t deleted when the system shut down.</p>\n\n<p>This caused some trouble for me. I&rsquo;d written my script to first delete the bootable subvolume if it exists, but this could no longer happen. <code>btrfs subvolume delete</code> is not recursive, and will fail if there are any subvolumes beneath the one you&rsquo;re operating on. I hadn&rsquo;t bothered accounting for this in my script, because I obviously wasn&rsquo;t expecting there to be a subvolume there.</p>\n\n<p>At any rate, it was at least a pretty easy fix, once I&rsquo;d managed to find any posts on the Internet about it at all. As far as I can tell, Nothing on my system is even using the programs associated with these subvolumes, and the subvolumes aren&rsquo;t actually necessary for them to function. Thanks sYsTeMd.</p>\n\n<pre><code>$ sudo btrfs sub del /var/lib/machines\n$ sudo btrfs sub del /var/lib/portables\n$ sudo mkdir /var/lib/machines /var/lib/portables</code></pre>\n\n<h1 id=\"my-script\">My Script</h1>\n\n<h2 id=\"dont-use-this-script-its-not-well-made-this-is-purely-for-reference-im-not-responsible-for-your-data-loss\">Don&rsquo;t use this script. It&rsquo;s not well made. This is purely for reference. I&rsquo;m not responsible for your data loss.</h2>\n\n<p>If you&rsquo;ve followed the initial bootstrapping instructions <a href=\"https://btrfs.wiki.kernel.org/index.php/Incremental_Backup#Doing_it_by_hand.2C_step_by_step\">here</a> and installed GRUB, this automates the rest. There are a lot of improvements I would like to make, but for now I&rsquo;m just really happy that it works.</p>\n\n<p>I&rsquo;ll post an addendum if it turns out I&rsquo;ve made some horrible mistake, or if I make any notable improvements.</p>\n\n<pre><code>#!/bin/zsh\n\n# backup drive must already be decrypted\n\nBACKUP_BTRFS_UUID=8037eb01-c46c-4a6e-abb7-8d3d55aeedce\nCORRECTED_FSTAB_PATH=/home/tim/backup-system/fstab-backup-drive\nCORRECTED_GRUB_CFG_PATH=/home/tim/backup-system/grub-backup-drive\nROOT_ROOTVOL_MOUNTPOINT=/mnt/rootvol\nROOT_SUBVOL_MOUNTPOINT=/mnt/rootvol/root\nBACKUP_ROOTVOL_MOUNTPOINT=/mnt/backuproot\nBACKUP_BOOTABLE_SUBVOL_MOUNTPOINT=/mnt/bootable\n\nif [ $(whoami) != root ]; then\n    echo \"This script must be run as root\"\nelif ! [ $(ls /dev/disk/by-uuid | grep $BACKUP_BTRFS_UUID) ]; then\n    echo \"Can't find BTRFS partition. Has the disk been decrypted?\"\nelse\n    # start by mounting the backup rootvol\n    mount -t btrfs /dev/disk/by-uuid/$BACKUP_BTRFS_UUID $BACKUP_ROOTVOL_MOUNTPOINT\n    \n    # make a new snapshot\n    btrfs sub snap -r $ROOT_SUBVOL_MOUNTPOINT $ROOT_ROOTVOL_MOUNTPOINT/backup-new\n    sync\n    \n    # now send the difference between the old and new backup\n    btrfs send -p $ROOT_ROOTVOL_MOUNTPOINT/backup $ROOT_ROOTVOL_MOUNTPOINT/backup-new | btrfs receive $BACKUP_ROOTVOL_MOUNTPOINT\n    \n    # Now delete the old snapshots\n    btrfs sub delete $ROOT_ROOTVOL_MOUNTPOINT/backup\n    mv $ROOT_ROOTVOL_MOUNTPOINT/backup-new $ROOT_ROOTVOL_MOUNTPOINT/backup\n    btrfs sub delete $BACKUP_ROOTVOL_MOUNTPOINT/backup\n    mv $BACKUP_ROOTVOL_MOUNTPOINT/backup-new $BACKUP_ROOTVOL_MOUNTPOINT/backup\n\n    # Now make a read/write snapshot of the backup, on the external drive.\n    # This will be the one we can boot into.\n    # First make sure we delete it if it already exists.\n    btrfs sub delete $BACKUP_ROOTVOL_MOUNTPOINT/bootable\n    btrfs sub snap $BACKUP_ROOTVOL_MOUNTPOINT/backup $BACKUP_ROOTVOL_MOUNTPOINT/bootable\n\n    # Mount it. This is going to be the bootable subvol.\n    mount -t btrfs -o subvol=/bootable /dev/disk/by-uuid/$BACKUP_BTRFS_UUID $BACKUP_BOOTABLE_SUBVOL_MOUNTPOINT\n    \n    # We need to have edited copies of /etc/fstab and /etc/default/grub, such that\n    # any UUIDs of the main drive are changed to those of the external one.\n    # We copy them over to the bootable subvol on the external drive.\n    cp $CORRECTED_FSTAB_PATH $BACKUP_BOOTABLE_SUBVOL_MOUNTPOINT/etc/fstab\n    cp $CORRECTED_GRUB_CFG_PATH $BACKUP_BOOTABLE_SUBVOL_MOUNTPOINT/etc/default/grub\n\n    # Mount virtual filesystems in preparation for chroot\n    for i in /dev /proc /sys /run; do\n    \tmount -o bind $i $BACKUP_BOOTABLE_SUBVOL_MOUNTPOINT$i\n    done\n\n    # Chroot to generate grub config and initrd for the bootable subvol.\n    chroot $BACKUP_BOOTABLE_SUBVOL_MOUNTPOINT zsh -c \"grub-mkconfig -o /boot/grub/grub.cfg; mkinitcpio -P\"\n\n    # unmount virtual filesystems\n    for i in /dev /proc /sys /run; do\n    \tumount $BACKUP_BOOTABLE_SUBVOL_MOUNTPOINT$i\n    done\nfi</code></pre>"))))